---
description: 
globs: 
alwaysApply: true
---
# Technical Debt Registry

## Architecture Debt

1. **Dual Architecture Paths**
   - **Impact**: Severe maintenance confusion, feature duplication
   - **Resolution**: Consolidate to a single architecture path (src/ with FastAPI)

2. **Disconnected Components**
   - **Impact**: Advanced features remain inactive
   - **Resolution**: Connect components together, starting with Knowledge Base

3. **Monolithic Design in Active Path**
   - **Impact**: Poor maintainability, limited extensibility
   - **Resolution**: Replace with modular design in src/

## Security Debt

1. **CORS Misconfiguration**
   - **Impact**: Critical security vulnerability
   - **Resolution**: Configure proper origin restrictions

2. **Inadequate Input Validation**
   - **Impact**: Potential for injection attacks
   - **Resolution**: Implement comprehensive input validation

3. **Missing CSRF Protection**
   - **Impact**: Vulnerability to cross-site request forgery
   - **Resolution**: Enable CSRF protection middleware

## Database Debt

1. **SQLite for Production**
   - **Impact**: Limited scalability, concurrency issues
   - **Resolution**: Migrate to PostgreSQL

2. **Disconnected KnowledgeBase**
   - **Impact**: Inability to access structured data
   - **Resolution**: Implement knowledge base interface to database

3. **Inefficient JSON Storage**
   - **Impact**: Limited query capabilities
   - **Resolution**: Use JSONB in PostgreSQL with appropriate indexes

## Code Quality Debt

1. **Failing Tests**
   - **Impact**: Inability to validate changes
   - **Resolution**: Fix test suite

2. **Inconsistent Error Handling**
   - **Impact**: Poor reliability, difficult debugging
   - **Resolution**: Implement consistent error handling strategy

3. **Missing Type Hints**
   - **Impact**: Reduced code clarity, IDE support
   - **Resolution**: Add proper type annotations

## Infrastructure Debt

1. **File-Based Sessions**
   - **Impact**: Poor scalability, potential data loss
   - **Resolution**: Migrate to Redis

2. **Limited Observability**
   - **Impact**: Difficulty diagnosing issues
   - **Resolution**: Implement monitoring, logging, metrics

3. **Incomplete CI/CD**
   - **Impact**: Manual deployment steps, potential errors
   - **Resolution**: Complete CI/CD pipeline

## Dependency Debt

1. **Outdated/Conflicting Dependencies**
   - **Impact**: Security vulnerabilities, potential crashes
   - **Resolution**: Update dependencies, resolve conflicts

2. **Missing Dependencies**
   - **Impact**: Deployment failures
   - **Resolution**: Complete dependency specification

## Feature Debt

1. **Limited Multi-Language Support**
   - **Impact**: Suboptimal Arabic language experience
   - **Resolution**: Enhance Arabic language processing

2. **Basic Entity Extraction**
   - **Impact**: Limited understanding of user queries
   - **Resolution**: Implement advanced entity extraction

3. **Simplistic Information Retrieval**
   - **Impact**: Imprecise answers
   - **Resolution**: Implement RAG pipeline